import { c as p } from "./index-D6AlS0tn.mjs";
const c = Object.entries(p).map(([e, s]) => ({
  name: e,
  component: s
})), n = c.map((e) => e.name);
Object.fromEntries(
  c.map(({ name: e, component: s }) => [e, s])
);
function i(e) {
  return e.split("-").map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join("");
}
function m(e = {}) {
  const { prefix: s = "S" } = e;
  return {
    type: "component",
    resolve: (t) => {
      if (t.startsWith("s-")) {
        const o = i(t);
        if (n.includes(o))
          return {
            name: o,
            from: "speed-components-ui/components",
            sideEffects: "speed-components-ui/dist/style.css"
          };
      } else if (t.startsWith(s) && n.includes(t))
        return {
          name: t,
          from: "speed-components-ui/components",
          sideEffects: "speed-components-ui/dist/style.css"
        };
    }
  };
}
export {
  m as SpeedComponentsResolver
};

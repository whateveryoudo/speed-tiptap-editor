/// <reference types="node" />
import EventEmitter from 'events';
export declare class Storage extends EventEmitter {
    timed: Map<string, any>;
    constant: Map<string, any>;
    /**
     * Get all constant values.
     */
    all(): Promise<any>;
    /**
     * Get a constant value by the given key.
     */
    get(key: string, defaultValue?: any): Promise<any>;
    /**
     * Set a constant value by the given key.
     */
    set(key: string, value: any): Promise<any>;
    /**
     * Delete a constant value by the given key.
     * @param key
     */
    delete(key: string): Promise<any>;
    /**
     * Get all timed values.
     */
    allTimed(): Promise<any>;
    /**
     * Add a timed value by the given key.
     */
    add(key: string, value: any): Promise<any>;
    /**
     * Remove a timed value by the given timestamp and key.
     */
    remove(key: string, timestamp: string): Promise<any>;
}

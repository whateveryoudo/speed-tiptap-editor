/// <reference types="node" />
import { IncomingMessage, ServerResponse } from 'http';
import WebSocket, { WebSocketServer } from 'ws';
import { Socket } from 'net';
import { Storage } from './Storage';
export interface Configuration {
    password: string | undefined;
    path: string;
    port: number | undefined;
    storage: Storage | undefined;
    user: string | undefined;
}
export declare class Dashboard {
    configuration: Configuration;
    websocketServer: WebSocketServer;
    connections: Map<WebSocket, any>;
    /**
     * Constructor
     */
    constructor(configuration?: Partial<Configuration>);
    createServer(): void;
    handleRequest(request: IncomingMessage, response: ServerResponse): boolean;
    handleUpgrade(request: IncomingMessage, socket: Socket, head: any): boolean;
    handleConnection(connection: WebSocket, request: IncomingMessage): void;
    close(connection: WebSocket): void;
    send(message: string): void;
    private sendInitialDataToClient;
    private basicAuth;
}
